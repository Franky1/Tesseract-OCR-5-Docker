name: Schedule

on:
  schedule:
    # Runs "at 03:03 every day" (see https://crontab.guru)
    - cron: '3 3 * * *'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  VersionCheck:
    runs-on: ubuntu-latest
    outputs:
      # MAIN: "main"
      # RELEASE: "5.0.0"
      MAIN: ${{ steps.main.outputs.MAIN }}
      RELEASE: ${{ steps.release.outputs.RELEASE }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Show Python Version
        run: python --version
      - name: Install PyGithub
        run: pip install --upgrade PyGithub
      - name: Run python script to check for updates
        run: python versioncheck.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: read version from file for main
        id: main
        shell: bash
        run: |
          main_version=$(jq -r '.version' MAIN.json)
          echo "::set-output name=MAIN::$main_version"
      - name: read version from file for release
        id: release
        shell: bash
        run: |
          release_version=$(jq -r '.version' RELEASE.json)
          echo "::set-output name=RELEASE::$release_version"

  Build-Main:
    uses: Franky1/Tesseract-OCR-5-Docker/.github/workflows/build-main.yml@main
    needs: VersionCheck
    if: ${{ needs.VersionCheck.outputs.MAIN != 'None' }}
    with:
      TAG: latest
      BRANCH: ${{ needs.VersionCheck.outputs.MAIN }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Build-Release:
  #   uses: Franky1/Tesseract-OCR-5-Docker/.github/workflows/build-release.yml@main
  #   needs: VersionCheck
  #   if: ${{ env.RELEASE }} != ''
  #   with:
  #     TAG: ${{ env.RELEASE }}
  #     BRANCH: ${{ env.RELEASE }}
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
